<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0305.1200                               -->
<workbook original-version='10.5' source-build='10.5.2 (10500.18.0305.1200)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (FinalWithSignal)' inline='true' name='federated.0qm7d0c00ql02u1gbhr8x1r9g3ex' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='FinalWithSignal' name='excel-direct.1odearw0tdsstv108cb6c00r0ram'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Emilie/Documents/GitHub/viKnepperDem/FinalWithSignal.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1odearw0tdsstv108cb6c00r0ram' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Line' ordinal='0' />
            <column datatype='datetime' name='DateTime_Out' ordinal='1' />
            <column datatype='string' name='Section' ordinal='2' />
            <column datatype='string' name='Subsection' ordinal='3' />
            <column datatype='string' name='Unit' ordinal='4' />
            <column datatype='string' name='Signal' ordinal='5' />
            <column datatype='integer' name='Sum_Duration' ordinal='6' />
            <column datatype='string' name='ProductDescription' ordinal='7' />
            <column datatype='integer' name='Feed' ordinal='8' />
            <column datatype='integer' name='OutputGood' ordinal='9' />
            <column datatype='integer' name='Scrap' ordinal='10' />
            <column datatype='integer' name='Error_Count' ordinal='11' />
            <column datatype='real' name='Avg_Staff' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Line</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Line]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Line</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDA_RDK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DateTime_Out</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DateTime_Out]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DateTime_Out</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Section</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Section]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Section</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDA_RDK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subsection</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Subsection]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Subsection</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDA_RDK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Unit]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Unit</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDA_RDK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Signal</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Signal]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Signal</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDA_RDK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum_Duration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sum_Duration]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sum_Duration</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductDescription</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ProductDescription]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ProductDescription</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDA_RDK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Feed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Feed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Feed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OutputGood</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OutputGood]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>OutputGood</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scrap</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Scrap]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Scrap</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Error_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Error_Count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Error_Count</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg_Staff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg_Staff]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Avg_Staff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M10001:no:A1:M10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='dur/feed' datatype='real' name='[Calculation_112027097401720843]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Sum_Duration])/sum([Feed])' />
      </column>
      <column caption='dur/error' datatype='real' name='[Calculation_112027097403392012]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Sum_Duration])/sum([Error_Count])' />
      </column>
      <column caption='Country' datatype='string' name='[Calculation_112027097407447053]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Line]==&apos;1&apos; &#13;&#10;    THEN &apos;Denmark&apos; &#13;&#10;ELSEIF [Line]==&apos;2&apos; &#13;&#10;    THEN &apos;Denmark&apos;&#13;&#10;ELSE  &#13;&#10;    &apos;Brasil&apos; &#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Error_Count]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[OutputGood]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Scrap]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Sum_Duration]' role='measure' type='quantitative' />
      <column-instance column='[Error_Count]' derivation='Sum' name='[sum:Error_Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OutputGood]' derivation='Sum' name='[sum:OutputGood:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Scrap]' derivation='Sum' name='[sum:Scrap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sum_Duration]' derivation='Sum' name='[sum:Sum_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_112027097401720843]' derivation='User' name='[usr:Calculation_112027097401720843:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_112027097403392012]' derivation='User' name='[usr:Calculation_112027097403392012:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.482143' measure-ordering='alphabetic' measure-percentage='0.517857' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Error_Count:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097403392012:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097401720843:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Scrap:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:OutputGood:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Sum_Duration:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Denmark&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (FinalWithSignal)' name='federated.0qm7d0c00ql02u1gbhr8x1r9g3ex' />
          </datasources>
          <datasource-dependencies datasource='federated.0qm7d0c00ql02u1gbhr8x1r9g3ex'>
            <column caption='dur/feed' datatype='real' name='[Calculation_112027097401720843]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Sum_Duration])/sum([Feed])' />
            </column>
            <column caption='dur/error' datatype='real' name='[Calculation_112027097403392012]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Sum_Duration])/sum([Error_Count])' />
            </column>
            <column datatype='integer' name='[Error_Count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Feed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Line]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OutputGood]' role='measure' type='quantitative' />
            <column datatype='string' name='[ProductDescription]' role='dimension' type='nominal' />
            <column datatype='string' name='[Signal]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sum_Duration]' role='measure' type='quantitative' />
            <column-instance column='[Line]' derivation='None' name='[none:Line:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProductDescription]' derivation='None' name='[none:ProductDescription:nk]' pivot='key' type='nominal' />
            <column-instance column='[Signal]' derivation='None' name='[none:Signal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Error_Count]' derivation='Sum' name='[sum:Error_Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OutputGood]' derivation='Sum' name='[sum:OutputGood:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_112027097401720843]' derivation='User' name='[usr:Calculation_112027097401720843:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_112027097403392012]' derivation='User' name='[usr:Calculation_112027097403392012:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[:Measure Names]'>
            <groupfilter function='union' user:op='manual'>
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097403392012:qk]&quot;' />
              <groupfilter function='member' level='[:Measure Names]' member='&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097401720843:qk]&quot;' />
            </groupfilter>
          </filter>
          <sort class='manual' column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Error_Count:qk]&quot;</bucket>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:OutputGood:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <sort class='computed' column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Line:nk]' direction='ASC' using='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097403392012:qk]' />
          <filter class='categorical' column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]'>
            <groupfilter function='member' level='[none:ProductDescription:nk]' member='&quot;FLEXPEN ASP.30 NN2000 CCH MOC&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Signal:nk]'>
            <groupfilter function='member' level='[none:Signal:nk]' member='&quot;Unknown State&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]</column>
            <column>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Signal:nk]</column>
            <column>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[:Measure Names]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='7' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='8' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097403392012:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[:Measure Names]' />
            </encodings>
          </pane>
          <pane id='9' selection-relaxation-option='selection-relaxation-allow' y-axis-name='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097401720843:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>([federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097403392012:qk] + [federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097401720843:qk])</rows>
        <cols>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Line:nk]</cols>
      </table>
    </worksheet>
    <worksheet name='Unknown state error'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (FinalWithSignal)' name='federated.0qm7d0c00ql02u1gbhr8x1r9g3ex' />
          </datasources>
          <datasource-dependencies datasource='federated.0qm7d0c00ql02u1gbhr8x1r9g3ex'>
            <column caption='dur/feed' datatype='real' name='[Calculation_112027097401720843]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Sum_Duration])/sum([Feed])' />
            </column>
            <column caption='dur/error' datatype='real' name='[Calculation_112027097403392012]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Sum_Duration])/sum([Error_Count])' />
            </column>
            <column caption='Country' datatype='string' name='[Calculation_112027097407447053]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Line]==&apos;1&apos; &#13;&#10;    THEN &apos;Denmark&apos; &#13;&#10;ELSEIF [Line]==&apos;2&apos; &#13;&#10;    THEN &apos;Denmark&apos;&#13;&#10;ELSE  &#13;&#10;    &apos;Brasil&apos; &#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Error_Count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Feed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Line]' role='dimension' type='nominal' />
            <column datatype='string' name='[ProductDescription]' role='dimension' type='nominal' />
            <column datatype='string' name='[Signal]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sum_Duration]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_112027097407447053]' derivation='None' name='[none:Calculation_112027097407447053:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProductDescription]' derivation='None' name='[none:ProductDescription:nk]' pivot='key' type='nominal' />
            <column-instance column='[Signal]' derivation='None' name='[none:Signal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Feed]' derivation='Sum' name='[sum:Feed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_112027097401720843]' derivation='User' name='[usr:Calculation_112027097401720843:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_112027097403392012]' derivation='User' name='[usr:Calculation_112027097403392012:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ProductDescription:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:ProductDescription:nk]' member='&quot;FLEX.LIRA 6MG 8.15 LI.BLUE CAP&quot;' />
                <groupfilter function='member' level='[none:ProductDescription:nk]' member='&quot;FLEXPEN ACTRAPID HN (GE) CCH MOC&quot;' />
                <groupfilter function='member' level='[none:ProductDescription:nk]' member='&quot;FLEXPEN ASSEMBLY FOR TEST IDFÂ&quot;' />
                <groupfilter function='member' level='[none:ProductDescription:nk]' member='&quot;NovoMix 70 NN2000&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]' direction='DESC' using='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Feed:qk]' />
          <filter class='categorical' column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Signal:nk]'>
            <groupfilter function='member' level='[none:Signal:nk]' member='&quot;Unknown State&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Signal:nk]</column>
            <column>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Calculation_112027097407447053:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097403392012:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097403392012:qk]' z-order='1' />
            <reference-line axis-column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Feed:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Feed:qk]' z-order='2' />
            <reference-line axis-column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097401720843:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097401720843:qk]' z-order='3' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097403392012:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Calculation_112027097407447053:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Feed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Calculation_112027097407447053:nk]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097401720843:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Calculation_112027097407447053:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]</rows>
        <cols>([federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Feed:qk] + ([federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097403392012:qk] + [federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097401720843:qk]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Unknown state error'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card pane-specification-id='4' param='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Calculation_112027097407447053:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;FLEX.LIRA 6MG 8.15 LI.BLUE CAP&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;NovoMix 70 NN2000&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Calculation_112027097407447053:nk]</field>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Line:nk]</field>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]</field>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Section:nk]</field>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Signal:nk]</field>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[yr:DateTime_Out:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='250'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='250'>
            <card pane-specification-id='8' param='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Line:nk]</field>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]</field>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Signal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='192' name='Sheet 2' width='192'>
      iVBORw0KGgoAAAANSUhEUgAAAMAAAADACAYAAABS3GwHAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAKJElEQVR4nO3df2zU9R3H8Se7sv6kuRRkW9Xa1YVoYYzY26xTg64wSQNCgGDXEKdstqbG
      uhJk1QniZrZG0Sp/sLXOqnVrgBAiBSsM6qwyV9l1YwQuhsANq6A20hxwljb07P4oSFsavetd
      uX55vx7/9fv99O5D7p533x/9fhnX19fXh4hR34j3BETiSQGIaQpATFMAYpoCENMUgJimAMQ0
      BSCmKQAxTQGIaQpATFMAYpoCMMRfuwSPp5Ldw63cXYnH46Fy2JWXLwUgpiXEewIyRsyqwuuN
      9yQuPX0DSD9/LUsGbQLtptLjYW/9Sopm5uPx5DNz2Xr2By/8Su9HO3h8aQE3ezx48mcyv7yW
      fwfiMfmRUwDyldqnP8SLza207vgV1++v47nGjv4VwbdYc08VH/6kmr+1evG2vMLPvmigbHkD
      x+M75YgoAPlKi2dcSWoCJEyahBsIBvu/Ajoa69mRvoTKZdNJTQASsykquZOM/bt5qyOuU46I
      9gFkRHw+H7Tvp9hTN2RNDsEgMDkes4qcApAR6e3thaxlNGwpY0q8JxMFbQLJiEyZMgXaW2l1
      0gb/MBSAjEjWwiXkJ/hYv+JZ3v2kB4Cek+/z5rq1bGmP8+QioE0gc/oPb14wiypvFbMifRj3
      Ap7bnMTvKp/m4bkN9JBA6sTvceOiEsozYzjdUTZO9wUSy7QJJKYpADFNAYhpX7sT7LX4F1Ji
      hnaCI+T1evEMOooiTqZNIDFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBi
      mgIQ0xSAmKaL4mXEiusXxHsKEWu4+7VBP+sbQExTAGKaAhDTFICYpgDENAUgpikAMU0BiGkK
      QExTAGKaAhDTFICYpgDENAUgpikAMU0BiGnOvSDmRDNPrdrEkclzeXzNPAb+x4TBQ9uoe2kn
      BzvPMj5jKnfcu4x5U9IG/Xo4Y+Ty59BvgCB7/rKTiXML+M7QVcebqF63j2vuW8v6mvWsve8a
      9q2rpul4hGPEBEcGENzzIo1pxRTPSB6yJsSBXc2kF1UwPycJFy6ScuZTUZRO864DhMIeI1Y4
      L4DgHl5sTKO4eAZD3/5wFJ8vi7y8wZsyaXl5ZPl8HA17jFjhsACC7H11B2nFxVz04Q9AgEBP
      BhlD1yVnkNETIBD2GLHCUTvBwb2v0vjNxfxm+Hd/P7cb98ULcbsjHAN0dXUN+xSnT58OZ7oy
      Bg197ZwTQLCNhtfTKF493KbPAIH+T/HMwQsJBAYsC2cMkJKSMuxTTJgwIbK5y5gx9LVzTACf
      vt1E2ycf0Va256J1T5Ruh7wSakrcuBM76TwDgyo500ln4vlP/XDGiBWOCeBbhauoKRyy8Pg2
      1tRCyZfnAULk5rbT3Bbkllsu7OQG29pozy0gG4DsMMaIFQ7bCf46LqbNLuDUhmq2+rsJEaLb
      v5XqDacomD0NV9hjxArHfAOELbOQivIQdS+soOz8Wd7yCgozIxwjJozr6+vri/cknMTr9eLx
      eOI9jTFB9wYVcTgFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBi
      mgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBi
      mgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBi
      mgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBimgIQ0xSAmKYAxDQFIKYpADFNAYhpCkBMUwBi
      WkK8JxCJ4ActNG5qxvvBp3x+FhifSlbeEn6xNJ9vjx8w7tA26l7aycHOs4zPmMod9y5j3pS0
      wY8Vxhi5/DkogBCHW/9LYsEvWZN7JelJLkLdx/jXX//Ik3/6gqcf/DHJAMebqF63j+nL1/JA
      znjO+rfz9LPVuB5dRWHmuYcKZ4yY4KBNIBcz7ipn0Q1ZpCe5+pckXUn+PXcy9cABfACEOLCr
      mfSiCubnJOHCRVLOfCqK0mnedYBQ2GPECgcFMLzQ0aN8mJ1NNgBH8fmyyMsbvCmTlpdHls/H
      0bDHiBUO2gQaKET3qWMcad3Fpr/3ULh8ERMBCBDoyWBa8pDhyRlk9PgIhD1GrHBcAMe3reGJ
      7R8DkH79Iu5/rIBrU10XBrjduC/6LTfugQvDGQN0dXUNO4fTp09HPG8ZG4a+do4LIHPeGmrm
      Qaj7FMd8Lbzx1MNsvHE5vy68ChdAIEAAGLwvGyAQGLAsnDFASkrKsHOYMGFCbP4xcskNfe0c
      uw/gSkon64Z5lK6+n++2NPBWAMCNO7GTzjNDBp/ppDPx/Kd+OGPECscG8CVXCimJ/Z/ekE1u
      bjttbcFBQ4JtbbTn5p7bUQ5njFjhoAD2sbGqgZbD506CAaHuzzi4bSNv985gxtUALqbNLuDU
      hmq2+rsJEaLbv5XqDacomD2NcwdPwxgjVjhoH2AqM287wqaNa9ly7BTdIfrPBH9/DqWP/pRr
      z79zMwupKA9R98IKys6f5S2vGHyCK5wxYsK4vr6+vlg/aGlpKQA1NTWxfui483q9eDyeeE9j
      TCiuXxDvKUSs4e7XBv3soE0gkdhTAGKaAhDTYhJAaWnpl9v9Ik6ibwAxTQGIaSMKQJs8crnQ
      N4CYpgDEtFE5E3w505ngC3QmWMThFICYpgDEtKgD6DnZQceJz+mNxWxELrGoA3jnD4UU3vcK
      /ljMRuQSizqA/DlzcLfvYPt+fQeI80QdQNptT7K5di6Hf19OwyFFIM4S9SWRBzeuZuNBmJST
      xPaHFvPOD6dzxYD1U+/6LXdNjfZZREZH1AF0+r14ved+GAcBr5cPBqxPnh3tM4iMnqgDuPWR
      Jm59JBZTEbn0dB5ATItJAL2f7aV+5VIKbvbg8Xi4uWApK+v38pn2iWWMi/6+QIHdPFZUyTvu
      m5j780f4wVXwUesbNNaUUeSrYnPVLN1uUMasqAPwb6qldcaTvL52zoU3euEiSpbvYMWCWjb5
      Z1GSE+2ziIyOqDeB/H5//8mwoSvcc5iT78evU8QyhkV/IiwtDZ/PN8waHz5fGmn6f+dkDIv+
      TyEWLoT6ckrWvcn7HR10dHTQ8f6brCspp56FLMyPxTRFRkf0O8G5ZdQ908X9j65kaf2FxYnZ
      i3mmrozcqJ9AZPTE4O7QCUyaWcnmlgc50fkhh47AtVOuJmNiqpNuPS1GRf0e7TnZwcneVDIm
      pjJx8nXcNDkW0xK5NHQ9gJim6wHENF0PIKbpegAxTdcDiGlRB/Cjspd5uSRVhz3FkXQUSEzT
      USAxTUeBxDQdBRLTdBRITNNdIcS02NwVovdzDv/zVZ5f3b85BHDmf+/S9J+PY/LwIqMl+gB6
      D1F7dwFFFX9mS3MT59/zyVecYOfDtfxD+8UyhkUdQMemKuqSH+C1PS2sunXAirTbuf2693hv
      uKslRcaI/wO/ZGqqt+BHzwAAAABJRU5ErkJggg==
    </thumbnail>
    <thumbnail height='192' name='Unknown state error' width='192'>
      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
      s0ESWazCfQAAAABJRU5ErkJggg==
    </thumbnail>
  </thumbnails>
</workbook>
