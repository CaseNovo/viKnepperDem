<?xml version='1.0' encoding='utf-8' ?>

<!-- build 10500.18.0305.1200                               -->
<workbook original-version='10.5' source-build='10.5.2 (10500.18.0305.1200)' source-platform='win' version='10.5' xmlns:user='http://www.tableausoftware.com/xml/user'>
  <preferences>
    <preference name='ui.encoding.shelf.height' value='24' />
    <preference name='ui.shelf.height' value='26' />
  </preferences>
  <datasources>
    <datasource caption='Sheet1 (FinalWithSignal)' inline='true' name='federated.0qm7d0c00ql02u1gbhr8x1r9g3ex' version='10.5'>
      <connection class='federated'>
        <named-connections>
          <named-connection caption='FinalWithSignal' name='excel-direct.1odearw0tdsstv108cb6c00r0ram'>
            <connection class='excel-direct' cleaning='no' compat='no' dataRefreshTime='' filename='C:/Users/Emilie/Documents/GitHub/viKnepperDem/FinalWithSignal.xlsx' interpretationMode='0' password='' server='' validate='no' />
          </named-connection>
        </named-connections>
        <relation connection='excel-direct.1odearw0tdsstv108cb6c00r0ram' name='Sheet1' table='[Sheet1$]' type='table'>
          <columns gridOrigin='A1:M10001:no:A1:M10001:0' header='yes' outcome='2'>
            <column datatype='string' name='Line' ordinal='0' />
            <column datatype='datetime' name='DateTime_Out' ordinal='1' />
            <column datatype='string' name='Section' ordinal='2' />
            <column datatype='string' name='Subsection' ordinal='3' />
            <column datatype='string' name='Unit' ordinal='4' />
            <column datatype='string' name='Signal' ordinal='5' />
            <column datatype='integer' name='Sum_Duration' ordinal='6' />
            <column datatype='string' name='ProductDescription' ordinal='7' />
            <column datatype='integer' name='Feed' ordinal='8' />
            <column datatype='integer' name='OutputGood' ordinal='9' />
            <column datatype='integer' name='Scrap' ordinal='10' />
            <column datatype='integer' name='Error_Count' ordinal='11' />
            <column datatype='real' name='Avg_Staff' ordinal='12' />
          </columns>
        </relation>
        <metadata-records>
          <metadata-record class='column'>
            <remote-name>Line</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Line]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Line</remote-alias>
            <ordinal>0</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDA_RDK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>DateTime_Out</remote-name>
            <remote-type>7</remote-type>
            <local-name>[DateTime_Out]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>DateTime_Out</remote-alias>
            <ordinal>1</ordinal>
            <local-type>datetime</local-type>
            <aggregation>Year</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;DATE&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Section</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Section]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Section</remote-alias>
            <ordinal>2</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDA_RDK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Subsection</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Subsection]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Subsection</remote-alias>
            <ordinal>3</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDA_RDK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Unit</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Unit]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Unit</remote-alias>
            <ordinal>4</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDA_RDK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Signal</remote-name>
            <remote-type>130</remote-type>
            <local-name>[Signal]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Signal</remote-alias>
            <ordinal>5</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDA_RDK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Sum_Duration</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Sum_Duration]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Sum_Duration</remote-alias>
            <ordinal>6</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>ProductDescription</remote-name>
            <remote-type>130</remote-type>
            <local-name>[ProductDescription]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>ProductDescription</remote-alias>
            <ordinal>7</ordinal>
            <local-type>string</local-type>
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <collation flag='1' name='LDA_RDK_S2' />
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;WSTR&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Feed</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Feed]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Feed</remote-alias>
            <ordinal>8</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>OutputGood</remote-name>
            <remote-type>20</remote-type>
            <local-name>[OutputGood]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>OutputGood</remote-alias>
            <ordinal>9</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Scrap</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Scrap]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Scrap</remote-alias>
            <ordinal>10</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Error_Count</remote-name>
            <remote-type>20</remote-type>
            <local-name>[Error_Count]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Error_Count</remote-alias>
            <ordinal>11</ordinal>
            <local-type>integer</local-type>
            <aggregation>Sum</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;I8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='column'>
            <remote-name>Avg_Staff</remote-name>
            <remote-type>5</remote-type>
            <local-name>[Avg_Staff]</local-name>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias>Avg_Staff</remote-alias>
            <ordinal>12</ordinal>
            <local-type>real</local-type>
            <aggregation>Sum</aggregation>
            <precision>15</precision>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='string' name='DebugRemoteType'>&quot;R8&quot;</attribute>
            </attributes>
          </metadata-record>
          <metadata-record class='capability'>
            <remote-name />
            <remote-type>0</remote-type>
            <parent-name>[Sheet1]</parent-name>
            <remote-alias />
            <aggregation>Count</aggregation>
            <contains-null>true</contains-null>
            <attributes>
              <attribute datatype='integer' name='context'>0</attribute>
              <attribute datatype='string' name='gridOrigin'>&quot;A1:M10001:no:A1:M10001:0&quot;</attribute>
              <attribute datatype='boolean' name='header'>true</attribute>
              <attribute datatype='integer' name='outcome'>2</attribute>
            </attributes>
          </metadata-record>
        </metadata-records>
      </connection>
      <aliases enabled='yes' />
      <column caption='dur/feed' datatype='real' name='[Calculation_112027097401720843]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Sum_Duration])/sum([Feed])' />
      </column>
      <column caption='dur/error' datatype='real' name='[Calculation_112027097403392012]' role='measure' type='quantitative'>
        <calculation class='tableau' formula='sum([Sum_Duration])/sum([Error_Count])' />
      </column>
      <column caption='Country' datatype='string' name='[Calculation_112027097407447053]' role='dimension' type='nominal'>
        <calculation class='tableau' formula='IF [Line]==&apos;1&apos; &#13;&#10;    THEN &apos;Denmark&apos; &#13;&#10;ELSEIF [Line]==&apos;2&apos; &#13;&#10;    THEN &apos;Denmark&apos;&#13;&#10;ELSE  &#13;&#10;    &apos;Brasil&apos; &#13;&#10;END' />
      </column>
      <column datatype='integer' name='[Error_Count]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Number of Records]' role='measure' type='quantitative' user:auto-column='numrec'>
        <calculation class='tableau' formula='1' />
      </column>
      <column datatype='integer' name='[OutputGood]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Scrap]' role='measure' type='quantitative' />
      <column datatype='integer' name='[Sum_Duration]' role='measure' type='quantitative' />
      <column-instance column='[Error_Count]' derivation='Sum' name='[sum:Error_Count:qk]' pivot='key' type='quantitative' />
      <column-instance column='[OutputGood]' derivation='Sum' name='[sum:OutputGood:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Scrap]' derivation='Sum' name='[sum:Scrap:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Sum_Duration]' derivation='Sum' name='[sum:Sum_Duration:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_112027097401720843]' derivation='User' name='[usr:Calculation_112027097401720843:qk]' pivot='key' type='quantitative' />
      <column-instance column='[Calculation_112027097403392012]' derivation='User' name='[usr:Calculation_112027097403392012:qk]' pivot='key' type='quantitative' />
      <layout dim-ordering='alphabetic' dim-percentage='0.500759' measure-ordering='alphabetic' measure-percentage='0.499241' show-structure='true' />
      <style>
        <style-rule element='mark'>
          <encoding attr='color' field='[:Measure Names]' type='palette'>
            <map to='#4e79a7'>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Error_Count:qk]&quot;</bucket>
            </map>
            <map to='#59a14f'>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097403392012:qk]&quot;</bucket>
            </map>
            <map to='#76b7b2'>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097401720843:qk]&quot;</bucket>
            </map>
            <map to='#b07aa1'>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Scrap:qk]&quot;</bucket>
            </map>
            <map to='#e15759'>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex]&quot;</bucket>
            </map>
            <map to='#edc948'>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:OutputGood:qk]&quot;</bucket>
            </map>
            <map to='#f28e2b'>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Sum_Duration:qk]&quot;</bucket>
            </map>
          </encoding>
        </style-rule>
      </style>
      <semantic-values>
        <semantic-value key='[Country].[Name]' value='&quot;Denmark&quot;' />
      </semantic-values>
      <date-options start-of-week='monday' />
    </datasource>
  </datasources>
  <worksheets>
    <worksheet name='Sheet 2'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (FinalWithSignal)' name='federated.0qm7d0c00ql02u1gbhr8x1r9g3ex' />
          </datasources>
          <datasource-dependencies datasource='federated.0qm7d0c00ql02u1gbhr8x1r9g3ex'>
            <column datatype='integer' name='[Error_Count]' role='measure' type='quantitative' />
            <column datatype='string' name='[Line]' role='dimension' type='nominal' />
            <column datatype='integer' name='[OutputGood]' role='measure' type='quantitative' />
            <column datatype='string' name='[ProductDescription]' role='dimension' type='nominal' />
            <column datatype='string' name='[Signal]' role='dimension' type='nominal' />
            <column-instance column='[Line]' derivation='None' name='[none:Line:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProductDescription]' derivation='None' name='[none:ProductDescription:nk]' pivot='key' type='nominal' />
            <column-instance column='[Signal]' derivation='None' name='[none:Signal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Error_Count]' derivation='Sum' name='[sum:Error_Count:qk]' pivot='key' type='quantitative' />
            <column-instance column='[OutputGood]' derivation='Sum' name='[sum:OutputGood:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <sort class='manual' column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[:Measure Names]' direction='ASC'>
            <dictionary>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Error_Count:qk]&quot;</bucket>
              <bucket>&quot;[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:OutputGood:qk]&quot;</bucket>
            </dictionary>
          </sort>
          <filter class='categorical' column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]'>
            <groupfilter function='member' level='[none:ProductDescription:nk]' member='&quot;FLEXPEN ASP.30 NN2000 CCH MOC&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <filter class='categorical' column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Signal:nk]'>
            <groupfilter function='member' level='[none:Signal:nk]' member='&quot;Unknown State&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]</column>
            <column>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Signal:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[:Measure Names]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Line:nk]</rows>
        <cols>([federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Line:nk] / ([federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Line:nk] / [federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Line:nk]))</cols>
      </table>
    </worksheet>
    <worksheet name='Unknown state error'>
      <table>
        <view>
          <datasources>
            <datasource caption='Sheet1 (FinalWithSignal)' name='federated.0qm7d0c00ql02u1gbhr8x1r9g3ex' />
          </datasources>
          <datasource-dependencies datasource='federated.0qm7d0c00ql02u1gbhr8x1r9g3ex'>
            <column caption='dur/feed' datatype='real' name='[Calculation_112027097401720843]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Sum_Duration])/sum([Feed])' />
            </column>
            <column caption='dur/error' datatype='real' name='[Calculation_112027097403392012]' role='measure' type='quantitative'>
              <calculation class='tableau' formula='sum([Sum_Duration])/sum([Error_Count])' />
            </column>
            <column caption='Country' datatype='string' name='[Calculation_112027097407447053]' role='dimension' type='nominal'>
              <calculation class='tableau' formula='IF [Line]==&apos;1&apos; &#13;&#10;    THEN &apos;Denmark&apos; &#13;&#10;ELSEIF [Line]==&apos;2&apos; &#13;&#10;    THEN &apos;Denmark&apos;&#13;&#10;ELSE  &#13;&#10;    &apos;Brasil&apos; &#13;&#10;END' />
            </column>
            <column datatype='integer' name='[Error_Count]' role='measure' type='quantitative' />
            <column datatype='integer' name='[Feed]' role='measure' type='quantitative' />
            <column datatype='string' name='[Line]' role='dimension' type='nominal' />
            <column datatype='string' name='[ProductDescription]' role='dimension' type='nominal' />
            <column datatype='string' name='[Signal]' role='dimension' type='nominal' />
            <column datatype='integer' name='[Sum_Duration]' role='measure' type='quantitative' />
            <column-instance column='[Calculation_112027097407447053]' derivation='None' name='[none:Calculation_112027097407447053:nk]' pivot='key' type='nominal' />
            <column-instance column='[ProductDescription]' derivation='None' name='[none:ProductDescription:nk]' pivot='key' type='nominal' />
            <column-instance column='[Signal]' derivation='None' name='[none:Signal:nk]' pivot='key' type='nominal' />
            <column-instance column='[Feed]' derivation='Sum' name='[sum:Feed:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_112027097401720843]' derivation='User' name='[usr:Calculation_112027097401720843:qk]' pivot='key' type='quantitative' />
            <column-instance column='[Calculation_112027097403392012]' derivation='User' name='[usr:Calculation_112027097403392012:qk]' pivot='key' type='quantitative' />
          </datasource-dependencies>
          <filter class='categorical' column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]'>
            <groupfilter function='except' user:ui-domain='relevant' user:ui-enumeration='exclusive' user:ui-marker='enumerate'>
              <groupfilter function='level-members' level='[none:ProductDescription:nk]' />
              <groupfilter function='union'>
                <groupfilter function='member' level='[none:ProductDescription:nk]' member='&quot;FLEX.LIRA 6MG 8.15 LI.BLUE CAP&quot;' />
                <groupfilter function='member' level='[none:ProductDescription:nk]' member='&quot;FLEXPEN ACTRAPID HN (GE) CCH MOC&quot;' />
                <groupfilter function='member' level='[none:ProductDescription:nk]' member='&quot;FLEXPEN ASSEMBLY FOR TEST IDFÂ&quot;' />
                <groupfilter function='member' level='[none:ProductDescription:nk]' member='&quot;NovoMix 70 NN2000&quot;' />
              </groupfilter>
            </groupfilter>
          </filter>
          <sort class='computed' column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]' direction='DESC' using='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Feed:qk]' />
          <filter class='categorical' column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Signal:nk]'>
            <groupfilter function='member' level='[none:Signal:nk]' member='&quot;Unknown State&quot;' user:ui-domain='relevant' user:ui-enumeration='inclusive' user:ui-marker='enumerate' />
          </filter>
          <slices>
            <column>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Signal:nk]</column>
            <column>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]</column>
          </slices>
          <aggregation value='true' />
        </view>
        <style />
        <panes>
          <pane id='1' selection-relaxation-option='selection-relaxation-allow'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Calculation_112027097407447053:nk]' />
            </encodings>
            <reference-line axis-column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097403392012:qk]' enable-instant-analytics='true' formula='average' id='refline0' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097403392012:qk]' z-order='1' />
            <reference-line axis-column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Feed:qk]' enable-instant-analytics='true' formula='average' id='refline1' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Feed:qk]' z-order='2' />
            <reference-line axis-column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097401720843:qk]' enable-instant-analytics='true' formula='average' id='refline2' label-type='automatic' probability='95' scope='per-table' value-column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097401720843:qk]' z-order='3' />
          </pane>
          <pane id='3' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097403392012:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Calculation_112027097407447053:nk]' />
            </encodings>
          </pane>
          <pane id='4' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Feed:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Calculation_112027097407447053:nk]' />
            </encodings>
          </pane>
          <pane id='5' selection-relaxation-option='selection-relaxation-allow' x-axis-name='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097401720843:qk]'>
            <view>
              <breakdown value='auto' />
            </view>
            <mark class='Automatic' />
            <encodings>
              <color column='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Calculation_112027097407447053:nk]' />
            </encodings>
          </pane>
        </panes>
        <rows>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]</rows>
        <cols>([federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[sum:Feed:qk] + ([federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097403392012:qk] + [federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[usr:Calculation_112027097401720843:qk]))</cols>
      </table>
    </worksheet>
  </worksheets>
  <windows saved-dpi-scale-factor='1.25' source-height='37'>
    <window class='worksheet' name='Unknown state error'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='4' param='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Calculation_112027097407447053:nk]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <selection-collection>
          <node-selection select-tuples='false'>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;FLEX.LIRA 6MG 8.15 LI.BLUE CAP&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
            <oriented-node-reference orientation='vertical'>
              <node-reference>
                <fields>
                  <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]</field>
                </fields>
                <multibucket>
                  <bucket>&quot;NovoMix 70 NN2000&quot;</bucket>
                </multibucket>
              </node-reference>
              <page-reference />
            </oriented-node-reference>
          </node-selection>
        </selection-collection>
        <highlight>
          <color-one-way>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Calculation_112027097407447053:nk]</field>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Line:nk]</field>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]</field>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Section:nk]</field>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Signal:nk]</field>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[yr:DateTime_Out:ok]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
    <window class='worksheet' maximized='true' name='Sheet 2'>
      <cards>
        <edge name='left'>
          <strip size='200'>
            <card type='pages' />
            <card type='filters' />
            <card type='marks' />
          </strip>
        </edge>
        <edge name='top'>
          <strip size='2147483647'>
            <card type='columns' />
          </strip>
          <strip size='2147483647'>
            <card type='rows' />
          </strip>
          <strip size='2147483647'>
            <card type='title' />
          </strip>
        </edge>
        <edge name='right'>
          <strip size='200'>
            <card pane-specification-id='5' param='[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[:Measure Names]' type='color' />
          </strip>
        </edge>
      </cards>
      <viewpoint>
        <highlight>
          <color-one-way>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Line:nk]</field>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:ProductDescription:nk]</field>
            <field>[federated.0qm7d0c00ql02u1gbhr8x1r9g3ex].[none:Signal:nk]</field>
          </color-one-way>
        </highlight>
      </viewpoint>
    </window>
  </windows>
  <thumbnails>
    <thumbnail height='24' name='Sheet 2' width='64'>
      iVBORw0KGgoAAAANSUhEUgAAAEAAAAAYCAYAAABKtPtEAAAACXBIWXMAABJ0AAASdAHeZh94
      AAAAZklEQVRYhe2YwQnAMAzELqFzZK6QAUPnyiLuCH0FPe70NlgIv9yqqmRMpwVoEoAWoEkA
      WoAmAWgBmgSgBWgSgBagsQ/w0AKSdOb6nRnvvrLb/gISgBagSQBagCYBaAEa+wAtX2FzPr3v
      CynBMtztAAAAAElFTkSuQmCC
    </thumbnail>
    <thumbnail height='192' name='Unknown state error' width='192'>
      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
      AElFTkSuQmCC
    </thumbnail>
  </thumbnails>
</workbook>
